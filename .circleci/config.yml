version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:latest

    steps:
      - checkout

      # Step para executar os testes
      - run:
          name: Fake Test
          command: |
            echo "Fake test"  # Nome solicitado no exemplo

      # Step para escanear a aplicação com npm audit
      - run:
          name: AppSec - npm audit
          command: npm audit

      # Step para escanear a aplicação com Nodejsscan
      - run:
          name: AppSec - Nodejsscan
          command: |
            npm install -g nodejsscan
            nodejsscan

      # Step para verificar dependências com Retire.js
      - run:
          name: AppSec - Retire.js
          command: retire

      # Step para escanear o Dockerfile e a imagem Docker com Clair
      - run:
          name: AppSec - Clair
          command: |
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/coreos/clairctl:latest clairctl analyze -l $(pwd)/app1/Dockerfile

      # Step para escanear o Dockerfile e a imagem Docker com Trivy
      - run:
          name: AppSec - Trivy
          command: |
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest --ignore-unfixed $(pwd)/app1

      # Step para deploy da aplicação
      - run:
          name: Deploy to AWS ECS
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION

            # Passa o Cluster e o Serviço criados no ECS
            aws ecs update-service --cluster TesteDevSecOpsJunto --service testedevsecops --force-new-deployment
    environment:
        AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
        AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
